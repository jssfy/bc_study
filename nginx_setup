



/etc/nginx
$ tree
.
├── conf.d
├── fastcgi_params
├── koi-utf
├── koi-win
├── mime.types
├── naxsi_core.rules
├── naxsi.rules
├── naxsi-ui.conf.1.4.1
├── nginx.conf
├── proxy_params
├── scgi_params
├── sites-available
│   ├── default
│   └── default.bak
├── sites-enabled
│   └── default -> /etc/nginx/sites-available/default
├── uwsgi_params
└── win-utf

3 directories, 15 files

------------- 2017-02-06 18:39:11
/etc/nginx/nginx.conf

------- 2016-11-01 18:09:19
$ sudo nginx -t
[sudo] password for kidd: 
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful

用参数-t nginx -t 如果返回ok,用 -s reload 重新加载配置文件
nginx 如何检测配置文件的正确性

----------- 2016-08-25 10:50:58
http://www.pcre.org/


http://www.cnblogs.com/skynet/p/4146083.html
l  gzip模块需要 zlib 库
l  rewrite模块需要 pcre 库
l  ssl 功能需要openssl库

pcre2 - ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/


1. 安装FastCGI
sudo apt-get install spawn-fcgi
/usr/bin/spawn-fcgi
2. 在线安装
$sudo apt-get install nginx
所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下
启动程序文件在/usr/sbin/nginx
日志放在了/var/log/nginx中，分别是access.log和error.log
并已经在/etc/init.d/下创建了启动脚本nginx
默认的虚拟主机的目录设置在了/usr/share/nginx/www
$ nginx -v
nginx version: nginx/1.4.6 (Ubuntu)

/etc/nginx/sites-enabled/default
server {
  listen 80 default_server;
  listen [::]:80 default_server ipv6only=on;

  root /usr/share/nginx/html;
  index index.html index.htm;

3.2 启动Nginx
   （1）在线安装的启动过程
      $sudo /etc/init.d/nginx start
   （2）源代码安装的启动过程
      $cd /usr/local/nginx
      $sbin/nginx

$ sudo /etc/init.d/nginx stop
kidd@kidd-OptiPlex-9020:
~/Downloads/nginx/pcre2-10.20
$ ps -ef | grep nginx
kidd     18574  1387  0 11:00 pts/37   00:00:00 grep --color=auto nginx
kidd@kidd-OptiPlex-9020:
~/Downloads/nginx/pcre2-10.20
$ sudo /etc/init.d/nginx start
kidd@kidd-OptiPlex-9020:
~/Downloads/nginx/pcre2-10.20
$ ps -ef | grep nginx
root     18714  3037  0 11:00 ?        00:00:00 nginx: master process /usr/sbin/nginx
www-data 18715 18714  0 11:00 ?        00:00:00 nginx: worker process
www-data 18716 18714  0 11:00 ?        00:00:00 nginx: worker process
www-data 18717 18714  0 11:00 ?        00:00:00 nginx: worker process
www-data 18718 18714  0 11:00 ?        00:00:00 nginx: worker process
kidd     18814  1387  0 11:00 pts/37   00:00:00 grep --color=auto nginx



------------- 2016-08-25 11:39:50
console setup

$ sudo vim /etc/hosts
10.12.0.1 frontend.tz8
10.12.0.1 backend.tz8


$ sudo ln -s /etc/nginx/sites-available/default ../sites-enabled/default 
kidd@kidd-OptiPlex-9020:
/etc/nginx/sites-available
$ ll ../sites-enabled/
total 8
drwxr-xr-x 2 root root 4096  8月 25 11:53 ./
drwxr-xr-x 5 root root 4096  8月 25 10:58 ../
lrwxrwxrwx 1 root root   34  8月 25 11:53 default -> /etc/nginx/sites-available/default

sudo /etc/init.d/nginx start/stop
  restart seems not working properly.
sudo service nginx restart


without clearing cache, chrome might still show the webpage even if the web server has been stopped.


$ sudo nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful


Github configuration file seems wrong. set directive is used in server, location and if blocks. 


after modifying /etc/nginx/sites-enabled/default, need to restart
  sudo service nginx restart

---------- 2016-08-25 12:57:02
 2014  ./yii migrate
 2015  ./yii migration
 2047  vim admin_register.sh 
 2048  ./yii 
 2049  ./yii admin/backend-register kidd kidd@niub.la 123456

 yii help <command-name>


-------------2016-08-25 13:42:51
configurations:

server 
这个指令有两个作用：
·将HTTP请求的主机头与在nginx配置文件中的server{...}字段中指定的参数进行匹配，并且找出第一个匹配结果。这就是如何定义虚拟主机的方法，域名遵循下述优先级规则：
1、完整匹配的名称。
2、名称开始于一个文件通配符：*.example.com。
3、名称结束于一个文件通配符：www.example.*。
4、使用正则表达式的名称。
(略过没有匹配到的情况)


------------ 2016-09-09 10:43:28
/etc/nginx/sites-available/default

# You may add here your
# server {
# ...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##  

server {
  charset utf-8;
  client_max_body_size 128M;

  listen 80; ## listen for ipv4

  server_name frontend.tz8;
  root        /home/kidd/workspace/bc/advanced/MissionImpossible/frontend/web/;
  index       index.php;

  access_log  "/home/kidd/workspace/bc/advanced/MissionImpossible/log/frontend-access.log";
  error_log   "/home/kidd/workspace/bc/advanced/MissionImpossible/log/frontend-error.log";

  location / {
     # Redirect everything that isn't a real file to index.php
     try_files $uri $uri/ /index.php$is_args$args;
  }

  location ~ ^/assets/.*\.php$ {
     deny all;
  }

  location ~ \.php$ {
     include fastcgi_params;
     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
     #fastcgi_pass 127.0.0.1:9000;
     #fastcgi_pass unix:/var/run/php5-fpm.sock;
     fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
     try_files $uri =404;
  }

  location ~* /\. {
     deny all;
  }
}

server {
  charset utf-8;
  client_max_body_size 128M;

  listen 80; ## listen for ipv4

  server_name backend.tz8;
  root        "/home/kidd/workspace/bc/advanced/MissionImpossible/backend/web";
  index       index.php;

  access_log  "/home/kidd/workspace/bc/advanced/MissionImpossible/log/backend-access.log";
  error_log   "/home/kidd/workspace/bc/advanced/MissionImpossible/log/backend-error.log";

  location / {
     # Redirect everything that isn't a real file to index.php
     try_files $uri $uri/ /index.php$is_args$args;
  }

  location ~ ^/assets/.*\.php$ {
     deny all;
  }

  location ~ \.php$ {
     include fastcgi_params;
     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
     #fastcgi_pass 127.0.0.1:9000;
     #fastcgi_pass unix:/var/run/php5-fpm.sock;
     fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
     try_files $uri =404;
  }

  location ~* /\. {
     deny all;
  }
}

server {
  charset utf-8;
  client_max_body_size 128M;

  listen 80; ## listen for ipv4

  server_name localhost;
  root        "/usr/share/nginx/html";
  index       index.html;

  access_log  "/tmp/nginx-access.log";
  error_log   "/tmp/nginx-error.log";

  location / {
     # Redirect everything that isn't a real file to index.php
     try_files $uri $uri/ /index.php$is_args$args;
  }

  location ~ ^/assets/.*\.php$ {
     deny all;
  }

  location ~ \.php$ {
     include fastcgi_params;
     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
     #fastcgi_pass 127.0.0.1:9000;
     #fastcgi_pass unix:/var/run/php5-fpm.sock;
     fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
     try_files $uri =404;
  }

  location ~* /\. {
     deny all;
  }
}




# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
# listen 8000;
# listen somename:8080;
# server_name somename alias another.alias;
# root html;
# index index.html index.htm;
#
# location / {
#   try_files $uri $uri/ =404;
# }
#}


# HTTPS server
#
#server {
# listen 443;
# server_name localhost;
#
# root html;
# index index.html index.htm;
#
# ssl on;
# ssl_certificate cert.pem;
# ssl_certificate_key cert.key;
#
# ssl_session_timeout 5m;
#
# ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
# ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
# ssl_prefer_server_ciphers on;
#
# location / {
#   try_files $uri $uri/ =404;
# }
#}

-------- 2016-11-01 18:49:30
nginx sample:


--------- 2016-11-01 15:57:44
1. add to 'config' root:
    'defaultRoute' => 'country/index',
but this only solves the default route, not the index.php issue.

but '$ sudo php yii serve 10.12.0.36 --port=8888' works via accessing by "http://10.12.0.36:8888/mission/index"

2. 
在urlManager的使用上，用得最多的配置项就是：
$enablePrettyUrl ，是否开启URL美化功能。关于美化功能，我们在 路由(Route) 部分已经介绍过了。 注意如果 $enablePrettyUrl 不开启，表明使用原始的格式，那么所有路由规则都是无效的。
$showScriptName ，是否在URL中显示入口脚本。是对美化功能的进一步补充。
suffix 设置一个 .html 之类的假后缀，是对美化功能的进一步补充。
rules 保存路由规则们的声明，注意并非保存其实例。
$enableStrictParsing 是否开启严格解析。该选项仅在开启美化功能后生效。在开启严格解析模式时， 所有请求必须匹配 $rules[] 所声明的至少一个路由规则。 如果未开启，请求的PATH_INFO部分将作为所请求的路由进行后续处理。
在 UrlManager::init() 初始化过程中，可以发现 urlManager 使用了应用所提供的缓存组件（有果有的话）， 对所有路由规则的实例进行缓存。

to hide index.php in url:
http://tutsnare.com/remove-index-php-from-url-in-yii2/
1) load module and modify /etc/apache2/apache2.conf and 'sudo service apache2 restart'
<Directory /home/kidd/workspace/test_yii/>
  Options Indexes FollowSymLinks
  AllowOverride All
  Require all granted
</Directory>

sudo a2enmod rewrite
/etc/apache2
$ ls mods-enabled/
access_compat.load  authz_user.load  filter.load       php7.0.load
alias.conf          autoindex.conf   mime.conf         rewrite.load

to check if mod_rewrite has been enabled make a php file and add below code
phpinfo();


2. put .htaccess under the web root
RewriteEngine on

# if a directory or a file exists, use it directly
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d

# otherwise forward it to index.php
RewriteRule . index.php

http://www.yiiframework.com/wiki/15/how-to-hide-index-php-on-nginx/
!!!!!!!!!! with nginx, we do not need to add .htaccess file:
test via http://kidd.host/country/index

add below config to '/etc/nginx/sites-available/default'
    make sure /home/kidd/workspace/test_yii/basic/log is writable 
    add kidd.host local dns
    'sudo service nginx restart'

server {
  charset utf-8;
  client_max_body_size 128M;

  listen 80; ## listen for ipv4

  server_name kidd.host;
  root        /home/kidd/workspace/test_yii/basic/web/;
  index       index.php;

  access_log  "/home/kidd/workspace/test_yii/basic/log/frontend-access.log";
  error_log   "/home/kidd/workspace/test_yii/basic/log/frontend-error.log";

  location / {
     # Redirect everything that isn't a real file to index.php
     try_files $uri $uri/ /index.php$is_args$args;
  }

  location ~ ^/assets/.*\.php$ {
     deny all;
  }

  location ~ \.php$ {
     include fastcgi_params;
     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
     #fastcgi_pass 127.0.0.1:9000;
     #fastcgi_pass unix:/var/run/php5-fpm.sock;
     fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
     try_files $uri =404;
  }

  location ~* /\. {
     deny all;
  }
}

http://www.cnblogs.com/wawahaha/p/4641691.html
try_files $uri $uri/ /index.php?q=$uri&$args;
按顺序检查文件是否存在，返回第一个找到的文件。结尾的斜线表示为文件夹 -$uri/。如果所有的文件都找不到，会进行一个内部重定向到最后一个参数。
    actually "/index.php$is_args$args;" worked for this case.

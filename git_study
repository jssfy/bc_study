


--------------- 2016-11-26 17:32:54

 error: unpack failed: error Missing tree
最近新建一个仓库，push时遇到如下问题，试了好多方法，最后在stackoverflow上找到解决办法了，可是在开始时就试过这方法，但不成。至于为嘛出现的这种错误，还是不明白原因。
git.exe push --progress  "origin" release:refs/for/release%r=xxx
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 663 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
error: unpack failed: error Missing tree 4201fba85e02299e016f0129621858ec21ac94ae
To (url)
! [remote rejected] release -> refs/for/release%r=xxx(n/a (unpacker error))
error: failed to push some refs to '(url)'
git did not exit cleanly (exit code 1) (593 ms @ 2015/5/15 9:51:12)
 
解决方法：git push --no-thin origin HEAD:refs/for/release
Git还得花时间研究下，刚接触不久，小菜鸟一枚，好多原理都还弄不明白

有时候我们执行 git push 将一个 new branch 推送到远程仓库的时候，会被远程仓库阻止。
可能是我们没有相应的权限吧。然而，我在 git push 的时候加上 --no-thin 参数，就可以将其推送上去了。

git push –no-thin 实际上禁止了“thin pack transfer”优化。
--thin
--no-thin
    These options are passed to git-send-pack(1). A thin transfer significantly reduces the amount of sent data when the sender and receiver share many of the same objects in common. The default is --thin.

---------- 2016-11-25 10:52:01
$ gpm
git push origin HEAD:refs/for/master
Counting objects: 1, done.
Writing objects: 100% (1/1), 305 bytes | 0 bytes/s, done.
Total 1 (delta 0), reused 0 (delta 0)
error: unpack failed: error Missing tree bb6a900990667cbda4576f907e37a472bcaf975c
fatal: Unpack error, check server log
To ssh://anhye@git.niub.la:29419/BC/MissionImpossible
 ! [remote rejected] HEAD -> refs/for/master (n/a (unpacker error))
error: failed to push some refs to 'ssh://anhye@git.niub.la:29419/BC/MissionImpossible'

  possible fix: reset to some old commit and git pull

$ git fetch ssh://anhye@git.niub.la:29419/BC/MissionImpossible refs/changes/48/29148/1 && git cherry-pick FETCH_HEAD
From ssh://git.niub.la:29419/BC/MissionImpossible
 * branch            refs/changes/48/29148/1 -> FETCH_HEAD
[master 4d04fec] [BugFix] add paging for ajax get apis
 3 files changed, 30 insertions(+), 17 deletions(-)


-------- 2016-11-11 14:33:43
$ gpm
git push origin HEAD:refs/for/master
Username for 'http://10.12.6.6:8080': ahye
Password for 'http://ahye@10.12.6.6:8080': 
fatal: Authentication failed for 'http://10.12.6.6:8080/apes/'

$ git remote rm origin
kidd@kidd-OptiPlex-9020:
~/workspace/abc/apes
$ git remote add origin ssh://ahye@10.12.6.6:29418/apes
kidd@kidd-OptiPlex-9020:
~/workspace/abc/apes
$ git remote -v
origin  ssh://ahye@10.12.6.6:29418/apes (fetch)
origin  ssh://ahye@10.12.6.6:29418/apes (push)
kidd@kidd-OptiPlex-9020:
~/workspace/abc/apes
$ gpm
git push origin HEAD:refs/for/master
The authenticity of host '[10.12.6.6]:29418 ([10.12.6.6]:29418)' can't be established.
RSA key fingerprint is b7:95:ec:16:a9:86:14:fc:bd:c5:77:da:37:53:73:68.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '[10.12.6.6]:29418' (RSA) to the list of known hosts.
Counting objects: 87, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (10/10), done.
Writing objects: 100% (14/14), 2.97 KiB | 0 bytes/s, done.
Total 14 (delta 5), reused 0 (delta 0)
remote: Resolving deltas: 100% (5/5)
remote: Processing changes: refs: 1, done    
remote: ERROR: [0eb075a] missing Change-Id in commit message footer
remote: 
remote: Hint: To automatically insert Change-Id, install the hook:
remote:   gitdir=$(git rev-parse --git-dir); scp -p -P 29418 ahye@10.12.6.6:hooks/commit-msg ${gitdir}/hooks/
remote: And then amend the commit:
remote:   git commit --amend
remote: 
To ssh://ahye@10.12.6.6:29418/apes
 ! [remote rejected] HEAD -> refs/for/master ([0eb075a] missing Change-Id in commit message footer)
error: failed to push some refs to 'ssh://ahye@10.12.6.6:29418/apes'
kidd@kidd-OptiPlex-9020:
~/workspace/abc/apes
$ gitdir=$(git rev-parse --git-dir); scp -p -P 29418 ahye@10.12.6.6:hooks/commit-msg ${gitdir}/hooks/
commit-msg                                                                                                                                      100% 4682     4.6KB/s   00:00

-------- 2016-10-09 11:22:46
$ git checkout -b release --track origin/release

------------ 2016-10-09 11:18:58

git fetch ssh://anhye@git.niub.la:29419/BC/MissionImpossible refs/changes/30/25330/1 && git cherry-pick FETCH_HEAD


-------- 2016-10-09 10:33:21
a new commit is generated on "git merge": [however, if there are more commits in the to-be-merged branch, there will not be a new merge commit]
$ git merge master
Merge made by the 'recursive' strategy.
 2 | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 2
kidd@kidd-OptiPlex-9020:
~/workspace/test/git_test
$ git log
commit 43db8b8a18672e5f4625679becf88297dd0854bb
Merge: 6c3dd41 c7654d0
Author: anhye <anhye@niub.la>
Date:   Sun Oct 9 10:32:37 2016 +0800

    Merge branch 'master' into new

commit 6c3dd41296d1c6bb8e4eb06b0e598151a7519b43
Author: anhye <anhye@niub.la>
Date:   Sun Oct 9 10:32:32 2016 +0800

    3

commit c7654d0f7e09a7f44e91f0a4f2a630d8677b1bef
Author: anhye <anhye@niub.la>
Date:   Sun Oct 9 10:08:18 2016 +0800

    2

commit 4d620bb38cb089fbcdadbafbf06ea3b9a422c619
Author: anhye <anhye@niub.la>
Date:   Sun Oct 9 10:07:39 2016 +0800

    1

$ git reset --hard 6c3dd41296d1c6bb8e4eb06b0e598151a7519b43
HEAD is now at 6c3dd41 3
kidd@kidd-OptiPlex-9020:
~/workspace/test/git_test
$ git log
commit 6c3dd41296d1c6bb8e4eb06b0e598151a7519b43
Author: anhye <anhye@niub.la>
Date:   Sun Oct 9 10:32:32 2016 +0800

    3

commit 4d620bb38cb089fbcdadbafbf06ea3b9a422c619
Author: anhye <anhye@niub.la>
Date:   Sun Oct 9 10:07:39 2016 +0800

    1

------------ 2016-10-09 10:17:23
$ git rebase origin/master
Cannot rebase: You have unstaged changes.
Please commit or stash them.
kidd@kidd-OptiPlex-9020:
~/workspace/bc_study
$ git add .
kidd@kidd-OptiPlex-9020:
~/workspace/bc_study
$ git rebase origin/master
Cannot rebase: Your index contains uncommitted changes.
Please commit or stash them.
kidd@kidd-OptiPlex-9020:
~/workspace/bc_study
$ git commit -m "abc_1008"
[master 5407357] abc_1008
 5 files changed, 244 insertions(+), 2 deletions(-)
kidd@kidd-OptiPlex-9020:
~/workspace/bc_study
$ git rebase origin/master
First, rewinding head to replay your work on top of it...
Applying: abc_1008

------------ 2016-10-09 02:14:48
http://blog.csdn.net/afeiqiang/article/details/50814553

Merge

将master分支合并到feature分支最简单的办法就是用下面这些命令：

git checkout feature
git merge master

git merge master release
  will merge both master and release into the current branch

merge 能够胜任平常大部分的合并需求。但也会遇到某些特殊的情况，例如正在开发一个新的功能，线上说有一个紧急的bug要修复。bug修好了但并不像把仍在开发的新功能代码也提交到线上去。这时候也许想要一个只合并指定某些 commit 的功能。
假设分支结构如下：
dd2e86 - 946992 - 9143a9 - a6fd86 - 5a6057 [master]
                  \
                76cada-62ecb3-b886a0[feature]
再假设 62ecb3 的提交修复了bug，这时候可以用
cherry pick 合并单个 commit
具体操作：
git checkout master
git cherry-pick 62ecb3
就这么简单。62ecb3 已经应用在 master 上了（作为一个新的commit）。

root@iZ255ajr7y4Z:/var/www/ch28# git checkout -b test 90f58435435226a8b64fc00dd4c9d653df5927b4
Switched to a new branch 'test'
root@iZ255ajr7y4Z:/var/www/ch28# git log
commit 90f58435435226a8b64fc00dd4c9d653df5927b4
Author: anhye <anhye@niub.la>
Date:   Sat Oct 8 23:18:22 2016 +0800

    origin

commit bba58cf7c97061cc3b837665b59f087b291041d9
Author: kidd <309228933@qq.com>
Date:   Sat Oct 8 23:16:12 2016 +0800

    Take Off
root@iZ255ajr7y4Z:/var/www/ch28#

cherry pick 连续多个commit
cherry pick 虽好，但一次只能合并一个commit。合并多个就要用到 rebase 了。再次假设想要把 76cada 和 62ecb3 合并到 master 上。
操作：
git checkout -b newbranch 62ecb3
git rebase —onto master 76cada^
76cada^ 表示从 76cada 的 commit 开始合并（作为新的commit）。这样就完成了 76cada 到 62ecb3 合并到 master。


------ 2016-10-09 00:39:38
after cloning from a remote repository:
  1. git push
    if the remote is at the corresponding branch, git push will lead to remote uncommitted status, e.g., 
      root@iZ255ajr7y4Z:/var/www/ch28# git status
      On branch master
      Changes to be committed:
        (use "git reset HEAD <file>..." to unstage)

        deleted:    add_bm_form.php
        deleted:    add_bms.php
        deleted:    bookmark.gif
    however, if on another branch, the code will be pushed to all branches by default.
      the correct way is "git push -u origin master"


-------------- 2016-09-14 08:07:29
github

…or push an existing repository from the command line

git remote add origin https://github.com/jssfy/php_general.git
git push -u origin master
  -u, --set-upstream    set upstream for git pull/status

-------------- 2016-09-13 16:41:00
http://stackoverflow.com/questions/6887228/git-hangs-while-writing-objects

$ git config --global http.postBuffer 524288000  [yes, this helps, but it would be rather slow to push]
kidd@kidd-OptiPlex-9020:
~/workspace/bc/advanced/MissionImpossible
$ git push origin HEAD:refs/for/master
Counting objects: 62, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (18/18), done.
Writing objects:  33% (6/18), 2.07 MiB | 34.00 KiB/s 

$ git push origin HEAD:refs/for/master
Counting objects: 31, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (7/7), done.
Writing objects:  71% (5/7), 2.07 MiB | 44.00 KiB/s   




Writing objects: 100% (7/7), 4.26 MiB | 16.00 KiB/s, done.
Total 7 (delta 3), reused 0 (delta 0)
remote: Resolving deltas: 100% (3/3)
remote: Processing changes: updated: 1, refs: 1, done    
remote: 
remote: Updated Changes:
remote:   http://git.niub.la/24043 [feature] TZB-178 生成邀请二维码
remote: 
To ssh://anhye@git.niub.la:29419/BC/MissionImpossible
 * [new branch]      HEAD -> refs/for/master


-------------- 2016-08-25 20:41:34
git add --all .

-------------- 2016-08-19 16:04:20

git difftool

[user]
  email = anhye@niub.la
  name = anhye
[color]
  ui = auto
[core]
editor = vim
[merge]
tool = meld
[difftool]
prompt = false
[alias]
d = difftool
[diff]
tool = meld
  external = meld
[push]
  default = matching
[receive]
  denyCurrentBranch = ignore


------------ 2016-10-09 02:14:48
http://blog.csdn.net/afeiqiang/article/details/50814553

Merge

将master分支合并到feature分支最简单的办法就是用下面这些命令：

git checkout feature
git merge master

git merge master release
  will merge both master and release into the current branch

merge 能够胜任平常大部分的合并需求。但也会遇到某些特殊的情况，例如正在开发一个新的功能，线上说有一个紧急的bug要修复。bug修好了但并不像把仍在开发的新功能代码也提交到线上去。这时候也许想要一个只合并指定某些 commit 的功能。
假设分支结构如下：
dd2e86 - 946992 - 9143a9 - a6fd86 - 5a6057 [master]
                  \
                76cada-62ecb3-b886a0[feature]
再假设 62ecb3 的提交修复了bug，这时候可以用
cherry pick 合并单个 commit
具体操作：
git checkout master
git cherry-pick 62ecb3
就这么简单。62ecb3 已经应用在 master 上了（作为一个新的commit）。

root@iZ255ajr7y4Z:/var/www/ch28# git checkout -b test 90f58435435226a8b64fc00dd4c9d653df5927b4
Switched to a new branch 'test'
root@iZ255ajr7y4Z:/var/www/ch28# git log
commit 90f58435435226a8b64fc00dd4c9d653df5927b4
Author: anhye <anhye@niub.la>
Date:   Sat Oct 8 23:18:22 2016 +0800

    origin

commit bba58cf7c97061cc3b837665b59f087b291041d9
Author: kidd <309228933@qq.com>
Date:   Sat Oct 8 23:16:12 2016 +0800

    Take Off
root@iZ255ajr7y4Z:/var/www/ch28#

cherry pick 连续多个commit
cherry pick 虽好，但一次只能合并一个commit。合并多个就要用到 rebase 了。再次假设想要把 76cada 和 62ecb3 合并到 master 上。
操作：
git checkout -b newbranch 62ecb3
git rebase —onto master 76cada^
76cada^ 表示从 76cada 的 commit 开始合并（作为新的commit）。这样就完成了 76cada 到 62ecb3 合并到 master。


------ 2016-10-09 00:39:38
after cloning from a remote repository:
  1. git push
    if the remote is at the corresponding branch, git push will lead to remote uncommitted status, e.g., 
      root@iZ255ajr7y4Z:/var/www/ch28# git status
      On branch master
      Changes to be committed:
        (use "git reset HEAD <file>..." to unstage)

        deleted:    add_bm_form.php
        deleted:    add_bms.php
        deleted:    bookmark.gif
    however, if on another branch, the code will be pushed to all branches by default.
      the correct way is "git push -u origin master"


-------------- 2016-09-14 08:07:29
github

…or push an existing repository from the command line

git remote add origin https://github.com/jssfy/php_general.git
git push -u origin master
  -u, --set-upstream    set upstream for git pull/status

-------------- 2016-09-13 16:41:00
http://stackoverflow.com/questions/6887228/git-hangs-while-writing-objects

$ git config --global http.postBuffer 524288000  [yes, this helps, but it would be rather slow to push]
kidd@kidd-OptiPlex-9020:
~/workspace/bc/advanced/MissionImpossible
$ git push origin HEAD:refs/for/master
Counting objects: 62, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (18/18), done.
Writing objects:  33% (6/18), 2.07 MiB | 34.00 KiB/s 

$ git push origin HEAD:refs/for/master
Counting objects: 31, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (7/7), done.
Writing objects:  71% (5/7), 2.07 MiB | 44.00 KiB/s   




Writing objects: 100% (7/7), 4.26 MiB | 16.00 KiB/s, done.
Total 7 (delta 3), reused 0 (delta 0)
remote: Resolving deltas: 100% (3/3)
remote: Processing changes: updated: 1, refs: 1, done    
remote: 
remote: Updated Changes:
remote:   http://git.niub.la/24043 [feature] TZB-178 生成邀请二维码
remote: 
To ssh://anhye@git.niub.la:29419/BC/MissionImpossible
 * [new branch]      HEAD -> refs/for/master


-------------- 2016-08-25 20:41:34
git add --all .

-------------- 2016-08-19 16:04:20

git difftool

[user]
  email = anhye@niub.la
  name = anhye
[color]
  ui = auto
[core]
editor = vim
[merge]
tool = meld
[difftool]
prompt = false
[alias]
d = difftool
[diff]
tool = meld
  external = meld
[push]
  default = matching
[receive]
  denyCurrentBranch = ignore
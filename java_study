


------------ 2016-12-20 15:25:28

http://www.jb51.net/article/51357.htm

今天和同事在讨论一个问题，需要检查“输入的字符串中是否包含中文”，刚开始想到是用正则表达式，正则表达式中是以[u4e00-u9fa5]来全匹配字符是否是中文，但现在面临的问题是这个字符串中还可能包含英文字符、数字、特殊字符，一时也没想出能匹配该场景的正则表达式，后来在网上搜了下，可以使用Matcher类来解决该问题

import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class demo {
static String regEx = "[\u4e00-\u9fa5]";
static Pattern pat = Pattern.compile(regEx);
public static void main(String[] args) {
String input = "Hell world!";
System.out.println(isContainsChinese(input));
input = "hello world";
System.out.println(isContainsChinese(input));
}
  
public static boolean isContainsChinese(String str)
{
Matcher matcher = pat.matcher(str);
boolean flg = false;
if (matcher.find())    {
flg = true;
}
return flg;
}

------------ 2016-12-20 11:33:40
list looping:

public static void compare() {  
        List<String> list = new ArrayList<String>();  
        Set<String> set = new HashSet<String>();  
        for(int i=0;i<100000;i++) {  
            list.add("a"+i);  
        }  
        long t1=0L,t2=0L;  
        t1 = System.currentTimeMillis();  
        for(String s : list) {  
            set.add(s);  
        }  
        t2 = System.currentTimeMillis();  
        System.out.println("forEach遍历的时间为："+(t2-t1)+"mm");  
        ////two  
        t1 = System.currentTimeMillis();  
        for(int i=0; i<list.size(); i++) {  
            set.add(list.get(i));  
        }  
        t2 = System.currentTimeMillis();  
        System.out.println("size遍历的时间为："+(t2-t1)+"mm");  
        ////three  
        t1 = System.currentTimeMillis();  
        Iterator<String> iterator = list.iterator();  
        while(iterator.hasNext()) {  
            set.add((String)iterator.next());  
        }  
        t2 = System.currentTimeMillis();  
        System.out.println("iterator遍历的时间为："+(t2-t1)+"mm");  
    }


---------- 2016-11-29 18:32:34

    public static String convertToHtml(String docPath) {
        try {
            String docName = FilenameUtils.getName(docPath);
            String htmlFilePath = FileUtil.getHtmlDirectory() + "/" + StringUtils.toHexStr(docName) + ".html";
            String fileExt = FilenameUtils.getExtension(docPath).toLowerCase();

            switch (fileExt) {
                case "doc":
                case "docx":
                    com.aspose.words.Document doc = new com.aspose.words.Document(docPath);
                    convertWordToHtml(doc, htmlFilePath);
                    break;
                case "pdf":
                    com.aspose.pdf.Document pdf = new com.aspose.pdf.Document(docPath);
                    convertPdfToHtml(pdf, htmlFilePath);
                    break;

                default:
                    break;
            }

            File file = new File(htmlFilePath);
            HtmlUtil.addTags(file);

            return htmlFilePath;
        } catch (Exception e) {
            LOGGER.error("convertToHtml", e);
        }
        return null;
    }
    
    public static String convertPdfToHtml(com.aspose.pdf.Document doc, String filePath) {
        //String fileId = StringUtils.toHexStr(fileName);
        try {
            File chartDir = FileUtil.getChartDirectory();
            com.aspose.pdf.HtmlSaveOptions saveOptions = new com.aspose.pdf.HtmlSaveOptions();

            //saveOptions.setFixedLayout(true);
            //saveOptions.SpecialFolderForSvgImages = chartDir.getPath();
            //saveOptions.RasterImagesSavingMode = HtmlSaveOptions.RasterImagesSavingModes.AsExternalPngFilesReferencedViaSvg;
            saveOptions.RasterImagesSavingMode = HtmlSaveOptions.RasterImagesSavingModes.AsEmbeddedPartsOfPngPageBackground;
            saveOptions.PartsEmbeddingMode = HtmlSaveOptions.PartsEmbeddingModes.EmbedAllIntoHtml;
            saveOptions.LettersPositioningMethod = LettersPositioningMethods.UseEmUnitsAndCompensationOfRoundingErrorsInCss;
            saveOptions.setCompressSvgGraphicsIfAny(true);

            doc.save(filePath, saveOptions);

            return filePath;
        } catch (Exception e) {
            LOGGER.error("convertToHtml", e);
        }
        return null;
    }



    public static String convertWordToHtml(com.aspose.words.Document doc, String filePath) {
        //String fileId = StringUtils.toHexStr(fileName);
        //String filePath = FileUtil.getHtmlDirectory() + "/" + fileId + ".html";
        try {
            File chartDir = FileUtil.getChartDirectory();

            com.aspose.words.HtmlSaveOptions saveOptions = new com.aspose.words.HtmlSaveOptions(com.aspose.words.SaveFormat.HTML);
            //saveOptions.setImagesFolder(chartDir.getPath());
            //saveOptions.setImagesFolderAlias("api/v1/file/image");
            saveOptions.setExportImagesAsBase64(true);
            saveOptions.setExportDocumentProperties(true);
            saveOptions.setExportPageMargins(true);
            saveOptions.setExportPageSetup(true);
            saveOptions.setExportRelativeFontSize(true);
            saveOptions.setExportTocPageNumbers(true);
            saveOptions.setExportXhtmlTransitional(true);
            saveOptions.setPrettyFormat(true);
            saveOptions.setUpdateSdtContent(true);
            saveOptions.setExportListLabels(ExportListLabels.BY_HTML_TAGS);
            saveOptions.setExportLanguageInformation(true);
            saveOptions.setAllowNegativeIndent(true);
            saveOptions.setExportRoundtripInformation(true);
            //saveOptions.setScaleImageToShapeSize(true);
            //saveOptions.setDefaultTemplate();

            //analysisWord(doc);

            doc.save(filePath, saveOptions);

            return filePath;
        } catch (Exception e) {
            LOGGER.error("convertToHtml", e);
        }
        return null;
    }

----------- 2016-11-29 17:57:04
    public static String getFileName(ContentDisposition contentDisposition) {
        String fileName = contentDisposition.getFileName();
        try {
            byte[] bytes = fileName.getBytes("ISO8859-1");
            fileName = new String(bytes, "utf-8");
            return fileName;
        } catch (UnsupportedEncodingException e) {
            LOGGER.error("getFileName failed", e);
            return fileName;
        }
    }

https://my.oschina.net/chape/blog/201725
在JSP页面获取表单的值时会出现乱码，有两种解决方法：
1.在调用getParameter之前通过request.setCharacterEncoding设置字符编码
2.调用new String(str.getBytes("iso8859-1"), "UTF-8");编码后解码

https://my.oschina.net/u/189445/blog/528059
iso8859-1 通常叫做Latin-1
属于单字节编码，最多能表示的字符范围是0-255，应用于英文系列。比如，字母a的编码为0x61=97。 
    很明显，iso8859-1编码表示的字符范围很窄，无法表示中文字符。但是，由于是单字节编码，和计算机最基础的表示单位一致，所以很多时候，仍旧使用iso8859-1编码来表示。而且在很多协议上，默认使用该编码。比如，虽然"中文"两个字不存在iso8859-1编码，以gb2312编码为例，应该是"d6d0 cec4"两个字符（java字符占2个字节），使用iso8859-1编码的时候则将它拆开为4个字节来表示："d6 d0 ce c4"（事实上，在进行存储的时候，也是以字节为单位处理的）。而如果是UTF编码，则是6个字节"e4 b8 ad e6 96 87"。很明显，这种表示方法还需要以另一种编码为基础。  



------------- 2016-11-29 17:03:04

        Pattern pattern = Pattern.compile("\\\\");
        String source = "\\hi\\how\\are\\you";
        String[] arr = pattern.split(source);
        for (String item : arr
             ) {
            logger.info(item);
        }

2016-11-29 17:02:42 INFO  TemplateController:48 - 
2016-11-29 17:02:42 INFO  TemplateController:48 - hi
2016-11-29 17:02:42 INFO  TemplateController:48 - how
2016-11-29 17:02:42 INFO  TemplateController:48 - are
2016-11-29 17:02:42 INFO  TemplateController:48 - you

---------- 2016-11-29 14:45:32
java save html as pic:

1. not working well:
        try {

            Desktop.getDesktop().browse(
                    new URL("http://www.baidu.com").toURI());
            Robot robot = new Robot();
            robot.delay(10000);
            Dimension d = new Dimension(Toolkit.getDefaultToolkit().getScreenSize());
            int width = (int) d.getWidth();
            int height = (int) d.getHeight();
            //最大化浏览器
            robot.keyRelease(KeyEvent.VK_F11);
            robot.delay(2000);
            Image image = robot.createScreenCapture(new Rectangle(0, 0, width,
                    height));
            BufferedImage bi = new BufferedImage(width, height,
                    BufferedImage.TYPE_INT_RGB);
            Graphics g = bi.createGraphics();
            g.drawImage(image, 0, 0, width, height, null);
            //保存图片
            ImageIO.write(bi, "jpg", new File("/tmp/baidu.jpg"));
        } catch (java.awt.AWTException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        } catch (java.net.URISyntaxException e) {
            e.printStackTrace();
        }
2. https://github.com/xuwei-k/html2image


----------- 2016-11-29 14:15:06
extracted:

这两天碰到一个需求需要将一些html转为图片格式，一开始想到之前用过的第三方组件库html2image,但是后来发现这个库对一些较复杂的html支持得不是很好，一些较为复杂的css没法解析，于是看了点它的源代码，打算修改下，后来发现不太现实哈，一些过于复杂的css确实不好直接转换并绘成图片，于是想到用java后台截图，网上一搜，方法还真不少，这哥们写的不错，供大家参考：http://blog.csdn.net/cping1982/article/details/5353049



------------ 2016-11-28 14:04:25


    public static Timestamp strToTs(String str) throws ParseException {
         try {
             Timestamp ts = Timestamp.valueOf(str);
             return ts;
         } catch (Exception e){
             DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
             Date date = formatter.parse(str);
             Timestamp ts = new Timestamp(date.getTime());
             return ts;
         }
    }

    public static JsonObject parseJson(String string) {
        if (StringUtils.isEmpty(string)) {
            return Json.createObjectBuilder().build();
        }
        JsonReader jsonReader = Json.createReader(new StringReader(string));
        JsonObject object = jsonReader.readObject();
        jsonReader.close();
        return object;
    }

---------- 2016-11-18 17:45:06
log4j
在apache网站：jakarta.apache.org/log4j 可以免费下载到Log4j最新版本的软件包。

Log4j使用
Log4j的包下载完成后，解压，将其中打包好的的log4j-1.x.x.jar导入你的工程LIB中。
Log4j之所以受欢迎的原因之一是它的灵活性。Log4j提供了灵活的配置方法，默认是调用BasicConfigurator.configure()来进行配置，但如果只是简单的调用BasicConfigurator.configure()来进行配置工作，那么所有的配置都是固定的，不方便以后修改配置。另一种是动态配置，Log4j提供了PropertyConfigurator.configure(……)来动态配置，参数可以是一个properties文件所在路径的String对象，可以是一个properties文件所在路径的URL对象，也可以是一个properties对象。如果要用XML文件来配置信息，则可用类型的DOMConfigurator()函数来从一个XML文件中加载配置信息

log4j.rootLogger=INFO, stdout, file
此句为将等级为INFO的日志信息输出到stdout和R这两个目的地，stdout和R的定义在下面的代码，可以任意起名。等级可分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL，如果配置OFF则不打出任何信息，如果配置为INFO这样只显示INFO、WARN、ERROR的log信息，而DEBUG信息不会被显示，具体讲解可参照第三部分定义配置文件中的logger。

# Root logger option
log4j.rootLogger=INFO, stdout, file

# Redirect log messages to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Redirect log messages to a log file, support file rolling.
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=build/logs/log4j-application_3.log
log4j.appender.file.MaxFileSize=5MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

/home/kidd/tmp/java_01/build/logs/log4j-application_3.log

put log4j.properties under the same directory where the built package is located, such as "/home/kidd/tmp/java_01/gradle_java_module/build/classes/main"
but no bother, "/home/kidd/tmp/java_01/gradle_java_module/build/resources/main/log4j.properties" is used by default.

when using ctrl+f9 from idea, the gradle java project will automatically build the main/resources folder into the output "build" folder.

it seems log4j.properties is loaded automatically, commenting out 'PropertyConfigurator.configure("log4j.properties");' does not bother.
package com.jssfy;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

/**
 * Created by kidd on 16-11-18.
 */
public class Hello {
    static Logger logger = Logger.getLogger(Hello.class.getName());

    public static void main(String[] args) {
        System.out.println("hello");
//        PropertyConfigurator.configure("log4j.properties");
        logger.info("log4j info!!");
    }
}

it seems getResourceAsStream will load resource from the resources folder automatically.
  Hello.class.getClassLoader().getResourceAsStream("log4j.properties");
after I renamed main/resources/log4j.properties to some other name, logger.info will fail like:
  log4j:WARN No appenders could be found for logger (com.jssfy.Hello).
  log4j:WARN Please initialize the log4j system properly.
  log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
hence it seems resources/log4j.properties is loaded automatically in idea.
below method finally helped: [/home/kidd/tmp/java_01/gradle_java_module/src/main/resources/log4j_bak.properties]
        PropertyConfigurator.configure(Hello.class.getClassLoader().getResourceAsStream("log4j_bak.properties"));
        logger.info("log4j info!!");

as seen from below classpath config, '/home/kidd/tmp/java_01/gradle_java_module/build/resources/main' is already added to classpath.
System.out.println(System.getProperty("java.class.path"));
  /home/kidd/software/jdk1.8.0_111/jre/lib/charsets.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/deploy.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/ext/cldrdata.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/ext/dnsns.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/ext/jaccess.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/ext/jfxrt.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/ext/localedata.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/ext/nashorn.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/ext/sunec.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/ext/sunjce_provider.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/ext/sunpkcs11.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/ext/zipfs.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/javaws.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/jce.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/jfr.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/jfxswt.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/jsse.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/management-agent.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/plugin.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/resources.jar:/home/kidd/software/jdk1.8.0_111/jre/lib/rt.jar:/home/kidd/tmp/java_01/gradle_java_module/build/classes/main:/home/kidd/tmp/java_01/gradle_java_module/build/resources/main:/home/kidd/.gradle/caches/modules-2/files-2.1/log4j/log4j/1.2.17/5af35056b4d257e4b64b9e8069c0746e8b08629f/log4j-1.2.17.jar:/home/kidd/software/idea-IU-162.2228.15/lib/idea_rt.jar

for reference: [http://blog.csdn.net/knowledgeaaa/article/details/19617925]
Java日志 - 如何在项目中指定log4j.properties路径
方法一：
在main函数中添加如下代码
    public class App   
    {  
        static final Logger logger = Logger.getLogger(App.class);  
        public static void main( String[] args )  
        {  
            PropertyConfigurator.configure("/absolute/path/to/log4j.properties");  
            logger.debug("Hello world!");  
        }  
    }  
方法二：
在JAR文件启动参数中添加log4j.properties文件路径
[plain] view plain copy
print?在CODE上查看代码片派生到我的代码片
    -Dlog4j.configuration=<FILE_PATH>  
方法三：
将log4j.properties文件放在工程src/main/resources目录下

--------- 2016-11-18 12:41:12
resource:
http://riddickbryant.iteye.com/blog/436693
Java中的getResourceAsStream有以下几种：
1. Class.getResourceAsStream(String path) ： path 不以’/'开头时默认是从此类所在的包下取资源，以’/'开头则是从ClassPath根下获取。其只是通过path构造一个绝对路径，最终还是由ClassLoader获取资源。
2. Class.getClassLoader.getResourceAsStream(String path) ：默认则是从ClassPath根下获取，path不能以’/'开头，最终是由ClassLoader获取资源。
3. ServletContext. getResourceAsStream(String path)：默认从WebAPP根目录下取资源，Tomcat下path是否以’/'开头无所谓，当然这和具体的容器实现有关。
4. Jsp下的application内置对象就是上面的ServletContext的一种实现。 

  try {
      Properties config = new Properties();
      config.load(WindController.class.getClassLoader().getResourceAsStream("/META-INF/config.properties"));
      logger.info("config.properties: \n" + config.toString());
  } catch (IOException e) {
      logger.error("load config.properties failed");
  }

2016-11-18 12:42:26 INFO  WindController:34 - config.properties: 
{web.mongodb=mongodb://10.12.0.36:27017, test.name=kidd}

if config.properties is at "/home/kidd/workspace/abc/apes/src/main/resources/META-INF/config.properties",
  then it does not matter whether the path is starting with or without '/'

----------- 2016-11-15 15:06:22

    public static long getNextSequence(String name) {
        MongoCollection<Document> collection = database.getCollection("counters");
        Document obj =  collection.findOneAndUpdate(eq("_id", name),
                new Document("$inc", new Document("seq", 1)));
        return ((Number)obj.get("seq")).longValue();
    }

/api/v1/wind/test
java.lang.NullPointerException
  at com.abcft.apes.util.MongoUtil.getNextSequence(MongoUtil.java:176)
  at com.abcft.apes.controllers.WindController.test(WindController.java:30)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:498)
  at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)
  at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:144)
  at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:161)
  at org.glassfish.jersey.server.model.internal


----------- 2016-11-14 17:37:26
./gradlew war
  met a lot of java syntax error which is not seen in others' jdk8 machine.

  for me, java is already 1.8. 
  checked .bashrc, JAVA_HOME is still pointing to 1.7 dir, and then modifying it back fixed those issues all at once.

after this modification,  previous final inner class variable issue is also gone.

how found:
  took a look at gradlew, and found JAVA_HOME is cited.

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then


----------- 2016-11-11 16:52:46
EXCEPTION 
java.lang.UnsupportedClassVersionError: com/abcft/apes/controllers/WindController : Unsupported major.minor version 52.0

http://stackoverflow.com/questions/22489398/unsupported-major-minor-version-52-0

 69
down vote
  

The issue is because of Java version mismatch. Referring to the Wikipedia Java Class Reference :

    J2SE 8 = 52
    J2SE 7 = 51
    J2SE 6.0 = 50
    J2SE 5.0 = 49
    JDK 1.4 = 48
    JDK 1.3 = 47
    JDK 1.2 = 46
    JDK 1.1 = 45

These are the reported major numbers. The error regarding the unsupported major.minor version is because during compile time you are using a higher JDK and a lower JDK during runtime.

Thus, the 'major.minor version 52.0' error is possibly because the jar is compiled in jdk 1.8, but you are trying to run it in jdk 1.7 environment. To solve this, it's always better to have the jdk and jre pointed to the same version.

In Intellij,

    Go to Maven Settings -> Maven -> Importing. Set the JDK for importer to 1.8
    Go to Maven Settings -> Maven -> Runner. Set the JRE to 1.8
    Go to File -> Project Structure -> SDKs. Make sure the JDK home path is set to 1.8

Restart Intellij

Another approach which might help is by instructing IDEA which JDK version to start up with.

Go to : /Applications/IntelliJ\ IDEA\ 15\ CE.app/Contents/Info.plist and replace the JVM version with :

<key>JVMVersion</key>
<string>1.8*</string>

restarted idea: [both project structure and compiler.xml show 1.8]
  and it disppeared?

------------ 2016-11-11 15:06:37

Error:(68, 24) java: local variable path is accessed from within inner class; needs to be declared final
  updating to oracle jdk 1.8 does not help.

----------- 2016-11-10 21:27:03
upsert:

    public static boolean updateTestName(String strId, String name) {
        ObjectId id = new ObjectId(strId);
        MongoCollection<Document> rows = database.getCollection(TEST_COL);
        // json2Document

//        Document doc = MongoUtil.json2Document(obj);

        Document doc = new Document();
        doc.append("name", "ddd");
        doc.append("update_at", 111L);

//        collection.insertOne(doc);

        UpdateOptions upsert = new UpdateOptions();
        upsert.upsert(true);
        UpdateResult result = rows.updateOne(eq("name", name), new Document("$set", doc), upsert); // combine(set("name", name), set("age", 100)));
        logger.info("getUpsertedId: " + result.getUpsertedId());
        return true;
    }

> db.col01.find()
{ "_id" : ObjectId("582463b9c9473cc30d7822dd"), "age" : 124738242, "name" : "jssf" }
{ "_id" : ObjectId("5823261e424edad4cd86ebfc"), "age" : 100, "name" : "bbb", "update_at" : NumberLong(111) }
{ "_id" : ObjectId("58232643424edad4cd86ebfd"), "name" : "ccc", "update_at" : NumberLong(111) }

> db.col01.find()
{ "_id" : ObjectId("582463b9c9473cc30d7822dd"), "age" : 124738242, "name" : "jssf" }
{ "_id" : ObjectId("5823261e424edad4cd86ebfc"), "age" : 100, "name" : "bbb", "update_at" : NumberLong(111) }
{ "_id" : ObjectId("58232643424edad4cd86ebfd"), "name" : "ccc", "update_at" : NumberLong(111) }
{ "_id" : ObjectId("58247593fdfd805a9b9466a2"), "name" : "ddd", "update_at" : NumberLong(111) }

if inserted, then result.getUpsertedId() is not null: 
        UpdateResult result = rows.updateOne(eq("name", "fff"), new Document("$set", doc), upsert); // combine(set("name", name), set("age", 100)));
        logger.info("getUpsertedId: " + result.getUpsertedId());

  2016-11-11 14:14:13 INFO  MongoUtil:399 - getUpsertedId: BsonObjectId{value=582561b5fdfd805a9b9466a4}
otherwise null:
  2016-11-11 14:15:25 INFO  MongoUtil:399 - getUpsertedId: null


---------- 2016-11-10 21:20:53

    /**
     * Update a single document in the collection according to the specified arguments.
     *
     * @param filter        a document describing the query filter, which may not be null.
     * @param update        a document describing the update, which may not be null. The update to apply must include only update operators.
     * @param updateOptions the options to apply to the update operation
     * @return the result of the update one operation
     * @throws com.mongodb.MongoWriteException        if the write failed due some other failure specific to the update command
     * @throws com.mongodb.MongoWriteConcernException if the write failed due being unable to fulfil the write concern
     * @throws com.mongodb.MongoException             if the write failed due some other failure
     * @mongodb.driver.manual tutorial/modify-documents/ Updates
     * @mongodb.driver.manual reference/operator/update/ Update Operators
     */
    UpdateResult updateOne(Bson filter, Bson update, UpdateOptions updateOptions);


    public class UpdateOptions {
    private boolean upsert;
    private Boolean bypassDocumentValidation;

    /**
     * Returns true if a new document should be inserted if there are no matches to the query filter.  The default is false.
     *
     * @return true if a new document should be inserted if there are no matches to the query filter
     */
    public boolean isUpsert() {
        return upsert;
    }


------------------ 2016-11-10 21:11:43

/api/v1/wind/test
com.mongodb.MongoWriteException: E11000 duplicate key error index: kidd.col01.$name_1  dup key: { : "bbb" }
  at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:523)
  at com.mongodb.MongoCollectionImpl.update(MongoCollectionImpl.java:508)
  at com.mongodb.MongoCollectionImpl.updateOne(MongoCollectionImpl.java:355)
  at com.mongodb.MongoCollectionImpl.updateOne(MongoCollectionImpl.java:350)


--------- 2016-11-10 20:40:12

import static com.mongodb.client.model.Filters.*;
import static com.mongodb.client.model.Sorts.*;
import static com.mongodb.client.model.Updates.*;


------------ 2016-11-10 20:01:08
> db.col01.find()
{ "_id" : ObjectId("5823261e424edad4cd86ebfc"), "name" : "jssf" }
{ "_id" : ObjectId("58232643424edad4cd86ebfd"), "name" : "kidd" }

above _id is not searched like below:

    public static boolean updateTestName(String id, String name) {
        MongoCollection<Document> rows = database.getCollection(TEST_COL);
        UpdateResult result = rows.updateOne(eq("_id", id), set("name", name));
        logger.info("getUpsertedId: " + result.getUpsertedId());
        return true;
    }

but as below:
    public static boolean updateTestName(String strId, String name) {
        ObjectId id = new ObjectId(strId);
        MongoCollection<Document> rows = database.getCollection(TEST_COL);
        UpdateResult result = rows.updateOne(eq("_id", id), set("name", name));
        logger.info("getUpsertedId: " + result.getUpsertedId());
        return true;
    }

2nd way:
    public static boolean updateTestName(String strId, String name) {
        ObjectId id = new ObjectId(strId);
        MongoCollection<Document> rows = database.getCollection(TEST_COL);
        // json2Document

//        Document doc = MongoUtil.json2Document(obj);

        Document doc = new Document();
        doc.append("name", "bbb");
        doc.append("update_at", 111L);

//        collection.insertOne(doc);

        UpdateResult result = rows.updateOne(eq("_id", id), new Document("$set", doc)); // combine(set("name", name), set("age", 100)));
        logger.info("getUpsertedId: " + result.getUpsertedId());
        return true;
    }

> db.col01.find()
{ "_id" : ObjectId("58232643424edad4cd86ebfd"), "name" : "kidd" }
{ "_id" : ObjectId("582463b9c9473cc30d7822dd"), "age" : 124738242, "name" : "jssf" }
{ "_id" : ObjectId("5823261e424edad4cd86ebfc"), "age" : 100, "name" : "bbb", "update_at" : NumberLong(111) }


--------------- 2016-11-10 19:58:37
/api/v1/wind/test
java.lang.UnsupportedOperationException: Modified count is only available when connected to MongoDB 2.6 servers or above.

------ 2016-11-10 19:34:48
Mongo

    public static JsonObject getWindWsdEntry(String windCode) {
        MongoCollection<Document> collection = database.getCollection(MongoUtil.WIND_WSD_COL);
        Document doc = collection.find(eq("windcode", windCode)).first();
        return MongoUtil.document2Json(doc);
    }

        logger.info("mongo db wsd row: " + MongoUtil.getWindWsdEntry("000001.SH"));

2016-11-10 19:34:09 INFO  WindController:30 - mongo db wsd row: {"high":134.1,"windcode":"000001.SH","date":{"$numberLong":"679507200000"},"close":133.14,"pct_chg":0.2560240924358368,"open":133.9,"amt":5534900.0,"volume":1193800.0,"chg":0.339999999999975,"create_at":{"$numberLong":"1478689057000"},"low":131.87,"id":"58230121c9bb031018158d36"}


    public static void init(String connStr, String dbName) {
        MongoClientURI connectionString = new MongoClientURI(connStr);
        mongo = new MongoClient(connectionString);
        database = mongo.getDatabase(dbName);
        initDb();
    }

---------- 2016-11-10 19:36:37
how to locate: 
import org.glassfish.tyrus.client.ClientManager;

baidu and found it was public, go to maven center and search for org.glassfish.tyrus.client
  not helpful

  used below in build.gradle directly:
    compile 'org.glassfish.tyrus:tyrus-client:1.0'

------------- 2016-11-10 17:46:06

http://blog.sina.com.cn/s/blog_53a99cf30102v6o4.html

Ubuntu  14.04 java环境安装配置（不是openJAVA）
两种配置方式
第一:
在 Ubuntu 中使用 PPA 安装 Java 8 ( 支持 Ubuntu 10.04 - Ubuntu 14.04 ):
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install Oracle-java8-installer
完成之后可以通过以下命令来查看版本：
javac -version
安装 Java 8 需要接受许可，如果你想自动安装，那么可以在安装之前运行：
echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections
设置 Java 8 环境变量：
sudo apt-get install oracle-java8-set-default
切换为 Java 7 ：
sudo update-java-alternatives -s java-7-oracle
再切换为 Java 8：
sudo update-java-alternatives -s java-8-oracle


-------- 2016-11-10 17:51:52
$ cat .idea/compiler.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CompilerConfiguration">
    <resourceExtensions />
    <wildcardResourcePatterns>
      <entry name="!?*.java" />
      <entry name="!?*.form" />
      <entry name="!?*.class" />
      <entry name="!?*.groovy" />
      <entry name="!?*.scala" />
      <entry name="!?*.flex" />
      <entry name="!?*.kt" />
      <entry name="!?*.clj" />
      <entry name="!?*.aj" />
    </wildcardResourcePatterns>
    <annotationProcessing>
      <profile default="true" name="Default" enabled="false">
        <processorPath useClasspath="true" />
      </profile>
    </annotationProcessing>
    <bytecodeTargetLevel>
      <module name="apes_main" target="1.7" />
      <module name="apes_test" target="1.7" />
    </bytecodeTargetLevel>
  </component>
</project>

if 1.8 not installed, do not use 1.8:
  error java invalid target release